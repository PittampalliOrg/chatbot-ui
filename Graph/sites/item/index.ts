/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
import { createSiteFromDiscriminatorValue, type Site } from '../../models/index';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../models/oDataErrors/index';
// @ts-ignore
import { DriveRequestBuilderRequestsMetadata, type DriveRequestBuilder } from './drive/index';
// @ts-ignore
import { DrivesRequestBuilderNavigationMetadata, DrivesRequestBuilderRequestsMetadata, type DrivesRequestBuilder } from './drives/index';
// @ts-ignore
import { ItemsRequestBuilderNavigationMetadata, ItemsRequestBuilderRequestsMetadata, type ItemsRequestBuilder } from './items/index';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';

/**
 * Provides operations to manage the collection of site entities.
 */
export interface SiteItemRequestBuilder extends BaseRequestBuilder<SiteItemRequestBuilder> {
    /**
     * Provides operations to manage the drive property of the microsoft.graph.site entity.
     */
    get drive(): DriveRequestBuilder;
    /**
     * Provides operations to manage the drives property of the microsoft.graph.site entity.
     */
    get drives(): DrivesRequestBuilder;
    /**
     * Provides operations to manage the items property of the microsoft.graph.site entity.
     */
    get items(): ItemsRequestBuilder;
    /**
     * Retrieve properties and relationships for a site resource.A site resource represents a team site in SharePoint.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Site>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @see {@link https://learn.microsoft.com/graph/api/site-get?view=graph-rest-1.0|Find more info here}
     */
     get(requestConfiguration?: RequestConfiguration<SiteItemRequestBuilderGetQueryParameters> | undefined) : Promise<Site | undefined>;
    /**
     * Retrieve properties and relationships for a site resource.A site resource represents a team site in SharePoint.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<SiteItemRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
}
/**
 * Retrieve properties and relationships for a site resource.A site resource represents a team site in SharePoint.
 */
export interface SiteItemRequestBuilderGetQueryParameters {
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Select properties to be returned
     */
    select?: string[];
}
/**
 * Uri template for the request builder.
 */
export const SiteItemRequestBuilderUriTemplate = "{+baseurl}/sites/{site%2Did}{?%24expand,%24select}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const SiteItemRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "expand": "%24expand",
    "select": "%24select",
};
/**
 * Metadata for all the navigation properties in the request builder.
 */
export const SiteItemRequestBuilderNavigationMetadata: Record<Exclude<keyof SiteItemRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    drive: {
        requestsMetadata: DriveRequestBuilderRequestsMetadata,
    },
    drives: {
        requestsMetadata: DrivesRequestBuilderRequestsMetadata,
        navigationMetadata: DrivesRequestBuilderNavigationMetadata,
    },
    items: {
        requestsMetadata: ItemsRequestBuilderRequestsMetadata,
        navigationMetadata: ItemsRequestBuilderNavigationMetadata,
    },
};
/**
 * Metadata for all the requests in the request builder.
 */
export const SiteItemRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: SiteItemRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createSiteFromDiscriminatorValue,
        queryParametersMapper: SiteItemRequestBuilderGetQueryParametersMapper,
    },
};
/* tslint:enable */
/* eslint-enable */
