/* tslint:disable */
/* eslint-disable */
// Generated by Microsoft Kiota
// @ts-ignore
<<<<<<< HEAD
<<<<<<<< HEAD:Graph/me/todo/lists/item/extensions/index.ts
import { createExtensionCollectionResponseFromDiscriminatorValue, createExtensionFromDiscriminatorValue, serializeExtension, type Extension, type ExtensionCollectionResponse } from '../../../../../models/index';
========
import { createEventCollectionResponseFromDiscriminatorValue, type EventCollectionResponse } from '../../../models/index';
>>>>>>>> mgt:Graph/me/calendar/events/index.ts
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../../../../models/oDataErrors/index';
// @ts-ignore
<<<<<<<< HEAD:Graph/me/todo/lists/item/extensions/index.ts
=======
import { createExtensionCollectionResponseFromDiscriminatorValue, createExtensionFromDiscriminatorValue, serializeExtension, type Extension, type ExtensionCollectionResponse } from '../../../../../models/index';
// @ts-ignore
import { createODataErrorFromDiscriminatorValue, type ODataError } from '../../../../../models/oDataErrors/index';
// @ts-ignore
>>>>>>> mgt
import { CountRequestBuilderRequestsMetadata, type CountRequestBuilder } from './count/index';
// @ts-ignore
import { ExtensionItemRequestBuilderRequestsMetadata, type ExtensionItemRequestBuilder } from './item/index';
// @ts-ignore
import { type BaseRequestBuilder, type KeysToExcludeForNavigationMetadata, type NavigationMetadata, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';
<<<<<<< HEAD
========
import { type BaseRequestBuilder, type Parsable, type ParsableFactory, type RequestConfiguration, type RequestInformation, type RequestsMetadata } from '@microsoft/kiota-abstractions';
>>>>>>>> mgt:Graph/me/calendar/events/index.ts
=======
>>>>>>> mgt

/**
 * Provides operations to manage the extensions property of the microsoft.graph.todoTaskList entity.
 */
export interface ExtensionsRequestBuilder extends BaseRequestBuilder<ExtensionsRequestBuilder> {
    /**
<<<<<<< HEAD
<<<<<<<< HEAD:Graph/me/todo/lists/item/extensions/index.ts
     * Provides operations to count the resources in the collection.
=======
     * Provides operations to count the resources in the collection.
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
>>>>>>> mgt
     */
    get count(): CountRequestBuilder;
    /**
     * Provides operations to manage the extensions property of the microsoft.graph.todoTaskList entity.
     * @param extensionId The unique identifier of extension
     * @returns {ExtensionItemRequestBuilder}
<<<<<<< HEAD
========
     * Retrieve a list of events in a calendar.  The calendar can be one for a user, or the default calendar of a Microsoft 365 group. The list of events contains single instance meetings and series masters. To get expanded event instances, you can get the calendar view, orget the instances of an event.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<EventCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     * @see {@link https://learn.microsoft.com/graph/api/calendar-list-events?view=graph-rest-beta|Find more info here}
>>>>>>>> mgt:Graph/me/calendar/events/index.ts
     */
     byExtensionId(extensionId: string) : ExtensionItemRequestBuilder;
    /**
<<<<<<<< HEAD:Graph/me/todo/lists/item/extensions/index.ts
=======
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     byExtensionId(extensionId: string) : ExtensionItemRequestBuilder;
    /**
>>>>>>> mgt
     * The collection of open extensions defined for the task list. Nullable.
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<ExtensionCollectionResponse>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
<<<<<<< HEAD
=======
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
>>>>>>> mgt
     */
     get(requestConfiguration?: RequestConfiguration<ExtensionsRequestBuilderGetQueryParameters> | undefined) : Promise<ExtensionCollectionResponse | undefined>;
    /**
     * Create new navigation property to extensions for me
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {Promise<Extension>}
     * @throws {ODataError} error when the service returns a 4XX or 5XX status code
<<<<<<< HEAD
=======
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
>>>>>>> mgt
     */
     post(body: Extension, requestConfiguration?: RequestConfiguration<object> | undefined) : Promise<Extension | undefined>;
    /**
     * The collection of open extensions defined for the task list. Nullable.
<<<<<<< HEAD
========
     * Retrieve a list of events in a calendar.  The calendar can be one for a user, or the default calendar of a Microsoft 365 group. The list of events contains single instance meetings and series masters. To get expanded event instances, you can get the calendar view, orget the instances of an event.
>>>>>>>> mgt:Graph/me/calendar/events/index.ts
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     */
<<<<<<<< HEAD:Graph/me/todo/lists/item/extensions/index.ts
=======
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
>>>>>>> mgt
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<ExtensionsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
    /**
     * Create new navigation property to extensions for me
     * @param body The request body
     * @param requestConfiguration Configuration for the request such as headers, query parameters, and middleware options.
     * @returns {RequestInformation}
<<<<<<< HEAD
     */
     toPostRequestInformation(body: Extension, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
========
     toGetRequestInformation(requestConfiguration?: RequestConfiguration<EventsRequestBuilderGetQueryParameters> | undefined) : RequestInformation;
>>>>>>>> mgt:Graph/me/calendar/events/index.ts
=======
     * @deprecated  as of 2024-07/PrivatePreview:copilotExportAPI
     */
     toPostRequestInformation(body: Extension, requestConfiguration?: RequestConfiguration<object> | undefined) : RequestInformation;
>>>>>>> mgt
}
/**
 * The collection of open extensions defined for the task list. Nullable.
 */
export interface ExtensionsRequestBuilderGetQueryParameters {
    /**
     * Include count of items
     */
    count?: boolean;
    /**
     * Expand related entities
     */
    expand?: string[];
    /**
     * Filter items by property values
     */
    filter?: string;
    /**
     * Order items by property values
     */
    orderby?: string[];
    /**
     * Search items by search phrases
     */
    search?: string;
    /**
     * Select properties to be returned
     */
    select?: string[];
    /**
     * Skip the first n items
     */
    skip?: number;
    /**
     * Show only the first n items
     */
    top?: number;
}
/**
 * Uri template for the request builder.
 */
export const ExtensionsRequestBuilderUriTemplate = "{+baseurl}/me/todo/lists/{todoTaskList%2Did}/extensions{?%24count,%24expand,%24filter,%24orderby,%24search,%24select,%24skip,%24top}";
/**
 * Mapper for query parameters from symbol name to serialization name represented as a constant.
 */
const ExtensionsRequestBuilderGetQueryParametersMapper: Record<string, string> = {
    "count": "%24count",
    "expand": "%24expand",
    "filter": "%24filter",
    "orderby": "%24orderby",
    "search": "%24search",
    "select": "%24select",
    "skip": "%24skip",
    "top": "%24top",
};
/**
<<<<<<< HEAD
<<<<<<<< HEAD:Graph/me/todo/lists/item/extensions/index.ts
=======
>>>>>>> mgt
 * Metadata for all the navigation properties in the request builder.
 */
export const ExtensionsRequestBuilderNavigationMetadata: Record<Exclude<keyof ExtensionsRequestBuilder, KeysToExcludeForNavigationMetadata>, NavigationMetadata> = {
    byExtensionId: {
        requestsMetadata: ExtensionItemRequestBuilderRequestsMetadata,
        pathParametersMappings: ["extension%2Did"],
    },
    count: {
        requestsMetadata: CountRequestBuilderRequestsMetadata,
    },
};
/**
<<<<<<< HEAD
========
>>>>>>>> mgt:Graph/me/calendar/events/index.ts
=======
>>>>>>> mgt
 * Metadata for all the requests in the request builder.
 */
export const ExtensionsRequestBuilderRequestsMetadata: RequestsMetadata = {
    get: {
        uriTemplate: ExtensionsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createExtensionCollectionResponseFromDiscriminatorValue,
        queryParametersMapper: ExtensionsRequestBuilderGetQueryParametersMapper,
    },
<<<<<<< HEAD
<<<<<<<< HEAD:Graph/me/todo/lists/item/extensions/index.ts
=======
>>>>>>> mgt
    post: {
        uriTemplate: ExtensionsRequestBuilderUriTemplate,
        responseBodyContentType: "application/json",
        errorMappings: {
            XXX: createODataErrorFromDiscriminatorValue as ParsableFactory<Parsable>,
        },
        adapterMethodName: "send",
        responseBodyFactory:  createExtensionFromDiscriminatorValue,
        requestBodyContentType: "application/json",
        requestBodySerializer: serializeExtension,
        requestInformationContentSetMethod: "setContentFromParsable",
    },
<<<<<<< HEAD
========
>>>>>>>> mgt:Graph/me/calendar/events/index.ts
=======
>>>>>>> mgt
};
/* tslint:enable */
/* eslint-enable */
